---
source: crates/rustdoc-link/tests/lib.rs
expression: output
---
# mdbook-rustdoc-link

**[rustdoc-style linking][rustdoc] for [mdBook]** (with the help of [rust-analyzer]).

> ```md
> The [`option`][std::option] and [`result`][std::result] modules define optional and
> error-handling types, [`Option<T>`] and [`Result<T, E>`]. The [`iter`][std::iter]
> module defines Rust's iterator trait, [`Iterator`], which works with the `for` loop to
> access collections.
> ```
>
> The [`option`](https://doc.rust-lang.org/stable/core/option/index.html "std::option") and [`result`](https://doc.rust-lang.org/stable/core/result/index.html "std::result") modules define optional and
> error-handling types, [`Option<T>`](https://doc.rust-lang.org/stable/core/option/enum.Option.html "Option<T>") and [`Result<T, E>`](https://doc.rust-lang.org/stable/core/result/enum.Result.html "Result<T, E>"). The [`iter`](https://doc.rust-lang.org/stable/core/iter/index.html "std::iter")
> module defines Rust's iterator trait, [`Iterator`](https://doc.rust-lang.org/stable/core/iter/traits/iterator/trait.Iterator.html "Iterator"), which works with the `for` loop to
> access collections.
>
> â€” adapted from [<cite>A Tour of The Rust Standard Library</cite>][tour]

[rustdoc]:
  https://doc.rust-lang.org/rustdoc/write-documentation/linking-to-items-by-name.html
[rust-analyzer]: https://rust-analyzer.github.io/
[mdBook]: https://rust-lang.github.io/mdBook/
[tour]: https://doc.rust-lang.org/stable/std/#a-tour-of-the-rust-standard-library
