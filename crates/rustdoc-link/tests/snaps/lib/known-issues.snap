---
source: crates/rustdoc-link/tests/lib.rs
expression: output
---
# Known issues

<details class="toc" open>
  <summary>Sections</summary>

- [Performance](#performance)
- [Incorrect links](#incorrect-links)
  - [Macros](#macros)
  - [Trait items](#trait-items)
- [Unresolved items](#unresolved-items)
  - [Associated items on primitive types](#associated-items-on-primitive-types)
  - [Conditionally compiled items](#conditionally-compiled-items)
- [Sites other than docs.rs](#sites-other-than-docsrs)
- [Wrong line numbers in diagnostics](#wrong-line-numbers-in-diagnostics)

</details>

## Performance

`mdbook-rustdoc-link` itself doesn't need much processing power, but it invokes
rust-analyzer, which does a full scan of your workspace. The larger your codebase is,
the longer `mdbook` will have to wait for the preprocessor. This is the source of the
majority of the run time.

There is an [experimental caching feature](caching.md#enabling-caching), which persists
query results after runs and reuses them when possible, avoiding spawning rust-analyzer
when your edit doesn't involve item links.

## Incorrect links

In limited circumstances, rust-analyzer generates links that are incorrect or
inaccessible. Unfortunately, for such items, you will still have to link by hand.

> [!NOTE]
>
> The following observations are based on rust-analyzer
> <ra-version>(version)</ra-version>.

### Macros

Macros exported with [`#[macro_export]`][macro_export] are always exported at crate
root, and are documented as such by rustdoc, but rust-analyzer currently generates links
to the modules they are defined in. For example:

- [~~`panic!`~~](https://doc.rust-lang.org/stable/std/macros/macro.panic.html "panic!"), and many other `std` macros
  - The correct link is
    [https://doc.rust-lang.org/stable/std~~/macros~~/macro.panic.html][panic]
- [~~`serde_json::json!`~~](https://docs.rs/serde_json/1.0.140/serde_json/macros/macro.json.html "serde_json::json!")
  - The correct link is
    [https://docs.rs/serde_json/1.0.140/serde_json~~/macros~~/macro.json.html][serde_json::json]

Attribute macros generate links that use `macro.<macro_name>.html`, but rustdoc actually
generates `attr.<macro_name>.html`. For example:

- [~~`tokio::main!`~~](https://docs.rs/tokio-macros/2.5.0/tokio_macros/macro.main.html "tokio::main!")
  - The correct link is
    [https://docs.rs/tokio-macros/2.5.0/tokio_macros/~~macro~~attr.main.html][tokio::main]

### Trait items

Rust allows methods to have the same name if they are from different traits, and types
can implement the same trait multiple times if the trait is generic. All such methods
will appear on the same page for the type.

rustdoc will number the generated URL fragments so that they remain unique within the
HTML document. rust-analyzer does not yet have the ability to do so.

For example, these are the same links:

- [`<std::net::IpAddr as From<std::net::Ipv4Addr>>::from`](https://doc.rust-lang.org/stable/core/net/ip_addr/enum.IpAddr.html#method.from "<std::net::IpAddr as From<std::net::Ipv4Addr>>::from")
- [`<std::net::IpAddr as From<std::net::Ipv6Addr>>::from`](https://doc.rust-lang.org/stable/core/net/ip_addr/enum.IpAddr.html#method.from "<std::net::IpAddr as From<std::net::Ipv6Addr>>::from")

The correct link for the `From<Ipv6Addr>` implementation is actually
<a href="https://doc.rust-lang.org/stable/core/net/enum.IpAddr.html#method.from-1">
https://doc.rust-lang.org/stable/core/net/enum.IpAddr.html#method.from<strong>-1</strong>
</a>

## Unresolved items

### Associated items on primitive types

> [!NOTE]
>
> The following observations are based on rust-analyzer
> <ra-version>(version)</ra-version>.

Links to associated methods and items on primitive types are currently not resolved by
rust-analyzer. For example:

- \[`str::parse`]
- \[`f64::MIN_POSITIVE`]

### Conditionally compiled items

You may wish to link to items that are only conditionally compiled.

For example, [clap](https://docs.rs/clap/4.5.32/clap/index.html "clap") is known for providing guide-level documentation through docs.rs. To
link to the [tutorial for its Derive API][clap::_derive], theorectically you could write
\[`clap::_derive::_tutorial`]. However, this is gated behind the `clap/unstable-doc`
feature.

rust-analyzer supports configuring features to activate, but `mdbook-rustdoc-link` does
not yet support configuring rust-analyzer.

## Sites other than docs.rs

Currently, items from crates other than `std` always generate links that point to
<https://docs.rs>. `mdbook-rustdoc-link` does not yet support configuring alternative
hosting sites for crates (such as `wasm-bindgen` which hosts API docs under
`https://rustwasm.github.io/wasm-bindgen/api/`).

## Wrong line numbers in diagnostics

When the preprocessor fails to resolve some items, it emits warnings that look like:

<figure>

![warning emitted that has the wrong line numbers](media/error-reporting-wrong-line.png)

</figure>

You may notice that the line numbers are sometimes incorrect for your source file. This
could happen in files that use the `{{#include}}` directive, for example.

This is an unfortunate limitation with mdBook's preprocessor architecture. Preprocessors
are run sequentially, with the next preprocessor receiving Markdown source rendered by
the previous one. If preprocessors running before `mdbook-rustdoc-link` modify Markdown
source in such ways that shift lines around, then the line numbers will look incorrect.

Unless mdBook somehow gains [source map][sourcemap] support, this problem is unlikely to
ever be solved.

<!-- prettier-ignore-start -->

[macro_export]: https://doc.rust-lang.org/stable/reference/macros-by-example.html#path-based-scope
[panic]: https://doc.rust-lang.org/stable/std/macro.panic.html
[serde_json::json]: https://docs.rs/serde_json/1.0.140/serde_json/macro.json.html
[tokio::main]: https://docs.rs/tokio-macros/2.5.0/tokio_macros/attr.main.html
[IpV6Addr]: https://doc.rust-lang.org/stable/core/net/enum.IpAddr.html#method.from-1
[clap::_derive]: https://docs.rs/clap/4.5.32/clap/_derive/_tutorial/index.html
[sourcemap]: https://developer.mozilla.org/en-US/docs/Glossary/Source_map

<!-- prettier-ignore-end -->
