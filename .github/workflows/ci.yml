name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    - cron: "27 0 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test

    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable

    permissions:
      actions: write # Evict cache

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Get cache key
        run: |
          CARGO_VERSION=$(cargo --version)
          echo "CACHE_KEY=${{runner.os}}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/Cargo.lock')}}-${{github.workflow}}-${{github.job}}" >> "$GITHUB_OUTPUT"
          {
            echo "CACHE_KEY_RESTORE<<EOF"
            echo "${{runner.os}}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/Cargo.lock')}}-"
            echo "${{runner.os}}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-"
            echo "${{runner.os}}-$CARGO_VERSION-"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
        id: cache-key

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}
          restore-keys: ${{ steps.cache-key.outputs.CACHE_KEY_RESTORE }}
        id: cache-restore

      - run: cargo run   --package util-rust-analyzer -- download
      - run: cargo test  --release --all-features
        env:
          RUST_LOG: info

      - name: Evict cache
        run: gh cache delete '${{ steps.cache-key.outputs.CACHE_KEY }}'
        if: ${{ steps.cache-restore.outputs.cache-hit }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            target/
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}

    outputs:
      CACHE_KEY: ${{ steps.cache-key.outputs.CACHE_KEY }}
      CACHE_KEY_RESTORE: ${{ steps.cache-key.outputs.CACHE_KEY_RESTORE }}

  build_features:
    name: Build
    runs-on: ubuntu-latest

    needs:
      - test

    strategy:
      matrix:
        features:
          - rustdoc-link
          - lib-rustdoc-link,common-logger
          - lib-rustdoc-link

          - link-forever
          - lib-link-forever,common-logger
          - lib-link-forever

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ needs.test.outputs.CACHE_KEY }}
          restore-keys: ${{ needs.test.outputs.CACHE_KEY_RESTORE }}

      - run: cargo build --release --features ${{ matrix.features }}

  test_rustdoc_link_ra:
    name: rustdoc-link RA
    runs-on: ubuntu-latest

    needs:
      - test

    strategy:
      matrix:
        ra-version:
          - "2025-03-17"
          - "2025-03-04"
          - "nightly"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ needs.test.outputs.CACHE_KEY }}
          restore-keys: ${{ needs.test.outputs.CACHE_KEY_RESTORE }}

      - run: cargo run   --package util-rust-analyzer -- download
        env:
          RA_VERSION: ${{ matrix.ra-version }}

      - run: cargo test  --release --features rustdoc-link
        env:
          RUST_LOG: info
