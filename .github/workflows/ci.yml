name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    - cron: "27 0 * * *" # nightly test for RA

env:
  CARGO_TERM_COLOR: "always"
  RUST_LOG: "info"
  RUST_BACKTRACE: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test:
    name: Test

    strategy:
      matrix:
        toolchain:
          - stable
        platform:
          - ubuntu-latest
          - windows-latest
      fail-fast: false

    runs-on: ${{ matrix.platform }}

    permissions:
      contents: read
      actions: write # evict cache

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - uses: cargo-bins/cargo-binstall@b9bf4400702f721d469eec4d280125f650c85638

      - name: Get cache key
        run: |
          CARGO_VERSION=$(cargo --version)
          echo "CACHE_KEY=${{ runner.os }}-${{ runner.arch }}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/Cargo.lock')}}-${{github.workflow}}-${{github.job}}" >> "$GITHUB_OUTPUT"
          {
            echo "CACHE_KEY_RESTORE<<EOF"
            echo "${{ runner.os }}-${{ runner.arch }}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/Cargo.lock')}}-"
            echo "${{ runner.os }}-${{ runner.arch }}-$CARGO_VERSION-${{hashFiles('**/Cargo.toml')}}-"
            echo "${{ runner.os }}-${{ runner.arch }}-$CARGO_VERSION-"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
        id: cache-key
        shell: bash

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}
          restore-keys: ${{ steps.cache-key.outputs.CACHE_KEY_RESTORE }}
        id: cache-restore

      - name: Prepare binaries
        run: |
          cargo bin --install
          cargo run --package util-rust-analyzer -- download

      - run: cargo test --all-features --no-fail-fast -- --include-ignored

      - name: Evict cache
        run: gh cache delete '${{ steps.cache-key.outputs.CACHE_KEY }}'
        if: ${{ steps.cache-restore.outputs.cache-hit }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            target/
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}

      - name: Export cache key
        if: matrix.platform == 'ubuntu-latest'
        id: export-cache-key
        run: |
          echo "CACHE_KEY=${{ steps.cache-key.outputs.CACHE_KEY }}" >> "$GITHUB_OUTPUT"
          echo "CACHE_KEY_RESTORE=${{ steps.cache-key.outputs.CACHE_KEY_RESTORE }}" >> "$GITHUB_OUTPUT"
        shell: bash

    outputs:
      CACHE_KEY: ${{ steps.export-cache-key.outputs.CACHE_KEY }}
      CACHE_KEY_RESTORE: ${{ steps.export-cache-key.outputs.CACHE_KEY_RESTORE }}

  build_features:
    name: Build features

    needs:
      - test

    strategy:
      matrix:
        features:
          - rustdoc-link
          - lib-rustdoc-link,common-logger
          - lib-rustdoc-link
          - link-forever
          - lib-link-forever,common-logger
          - lib-link-forever
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ needs.test.outputs.CACHE_KEY }}
          restore-keys: ${{ needs.test.outputs.CACHE_KEY_RESTORE }}

      - run: cargo build --features ${{ matrix.features }}

  test_rustdoc_link_ra:
    name: (rustdoc-link) Test RA

    needs:
      - test

    strategy:
      matrix:
        ra-version:
          - "2025-03-17"
          - "2025-03-04"
          - "nightly"
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: |
            target/
          key: ${{ needs.test.outputs.CACHE_KEY }}
          restore-keys: ${{ needs.test.outputs.CACHE_KEY_RESTORE }}

      - run: cargo run --package util-rust-analyzer -- download
        env:
          RA_VERSION: ${{ matrix.ra-version }}

      - run: cargo test --features rustdoc-link
