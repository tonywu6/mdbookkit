name: CI

on:
  push:
    branches:
      - main
    paths:
      - "**/Cargo.*"
      - "**.rs"
      - ".github/workflows/ci.yml"

  pull_request:
    branches:
      - main

  schedule:
    - cron: "27 0 * * *" # nightly test for RA

  workflow_dispatch:

env:
  CARGO_HOME: .cargo
  CARGO_TERM_COLOR: "always"
  RUST_LOG: "info"
  RUST_BACKTRACE: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (${{ matrix.platform }})

    if: github.event_name != 'pull_request' || !startsWith(github.head_ref, 'release-plz-')
    # don't run on release-plz branches because they are updated only after
    # CI is already successful on main

    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest

        windows:
          - ${{github.ref_name == 'main' && github.event_name == 'push'}}
          # run on windows only on main

        exclude:
          - platform: windows-latest
            windows: false

      fail-fast: false

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@b9bf4400702f721d469eec4d280125f650c85638

      - name: Get Cargo version
        run: echo "cargo-version=$(cargo --version)" >> "$GITHUB_OUTPUT"
        shell: bash
        id: cargo-version

      - uses: tonywu6/cache-hit-please@58ed976f5281bd7dd2931035b573c09041b45ca6
        id: cache
        with:
          deps: |
            ${{runner.arch}}
            ${{runner.os}}
            ${{steps.cargo-version.outputs.cargo-version}}
            ${{hashFiles('**/Cargo.toml')}}
            ${{hashFiles('**/Cargo.lock')}}
            ${{github.workflow}}

          path: |
            .bin/
            .cargo/.crates.toml
            .cargo/.crates2.json
            .cargo/bin/
            .cargo/registry/index/
            .cargo/registry/cache/
            .cargo/git/db/
            target/

      - name: Prepare binaries
        run: |
          cargo bin --install
          cargo run --package util-rust-analyzer -- download

      - name: Build tests
        run: cargo test --all-features --no-run

      - name: Test
        run: cargo test --all-features --no-fail-fast -- --include-ignored

    outputs:
      cache-primary-key: ${{steps.cache.outputs.primary-key}}
      cache-restore-key: ${{steps.cache.outputs.restore-key}}
      cache-path: ${{steps.cache.outputs.path}}

  build_features:
    name: Build features

    needs:
      - test

    strategy:
      matrix:
        features:
          - rustdoc-link
          - lib-rustdoc-link,common-logger
          - lib-rustdoc-link
          - link-forever
          - lib-link-forever,common-logger
          - lib-link-forever
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: ${{needs.test.outputs.cache-path}}
          key: ${{ needs.test.outputs.cache-primary-key }}
          restore-keys: ${{ needs.test.outputs.cache-restore-key }}

      - run: cargo build --features ${{ matrix.features }}

  test_rustdoc_link_ra:
    name: (rustdoc-link) Test RA

    needs:
      - test

    strategy:
      matrix:
        ra-version:
          - "2025-03-17"
          - "2025-03-04"
          - "nightly"
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache/restore@v4
        with:
          path: ${{needs.test.outputs.cache-path}}
          key: ${{ needs.test.outputs.cache-primary-key }}
          restore-keys: ${{ needs.test.outputs.cache-restore-key }}

      - run: cargo run --package util-rust-analyzer -- download
        env:
          RA_VERSION: ${{ matrix.ra-version }}

      - name: Test
        run: cargo test --features rustdoc-link
