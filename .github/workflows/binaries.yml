name: Build binaries

permissions:
  contents: write

on:
  release:
    types:
      - published

  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    name: Build

    strategy:
      matrix:
        bin:
          - mdbook-rustdoc-link
          - mdbook-link-forever

        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}

    if: ${{ github.repository_owner == 'tonywu6' }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')

      - uses: taiki-e/install-action@v2
        with:
          tool: cross
        if: contains(matrix.target, '-musl')

      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ matrix.bin }}
          target: ${{ matrix.target }}
          archive: ${{ matrix.bin }}-$target
          tar: unix
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ github.event_name != 'release' }}
