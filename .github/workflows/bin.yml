name: Build binaries

permissions:
  contents: write

on:
  release:
    types:
      - published

  push:
    branches:
      - main

  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.target }}

    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - aarch64-pc-windows-msvc
          - x86_64-pc-windows-msvc

        # only linux builds unless release
        release:
          - ${{github.event_name == 'release' || github.event_name == 'workflow_dispatch'}}
        exclude:
          - release: false
            target: aarch64-apple-darwin
          - release: false
            target: x86_64-apple-darwin
          - release: false
            target: aarch64-pc-windows-msvc
          - release: false
            target: x86_64-pc-windows-msvc

    runs-on: ${{ contains(matrix.target, '-linux-') && 'ubuntu-latest' || contains(matrix.target, '-apple-') && 'macos-latest' || 'windows-latest' }}

    if: ${{ github.repository_owner == 'tonywu6' }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: runner.os == 'Linux'

      - name: Get Cargo version
        run: echo "cargo-version=$(cargo --version)" >> "$GITHUB_OUTPUT"
        shell: bash
        id: cargo-version

      - uses: tonywu6/cache-hit-please@v1
        id: cache
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          deps: |
            ${{runner.os}}
            ${{runner.arch}}
            ${{steps.cargo-version.outputs.cargo-version}}
            ${{hashFiles('**/Cargo.toml')}}
            ${{hashFiles('**/Cargo.lock')}}
            ${{github.workflow}}
            ${{github.run_id}}
          path: |
            .bin/
            target/

      - name: Build binaries
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          target: ${{ matrix.target }}
          bin: mdbook-rustdoc-link,mdbook-link-forever
          features: rustdoc-link,link-forever
          archive: mdbookkit-$target
          tar: unix
          zip: windows
          codesign: "-"
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ github.event_name != 'release' }}

      - uses: actions/upload-artifact@v4
        with:
          path: |
            target/${{ matrix.target }}/release/mdbook-rustdoc-link
            target/${{ matrix.target }}/release/mdbook-link-forever
            target/${{ matrix.target }}/release/mdbook-rustdoc-link.exe
            target/${{ matrix.target }}/release/mdbook-link-forever.exe
          name: ${{ matrix.target }}
          if-no-files-found: warn
          retention-days: 1
        if: github.event_name != 'release'
